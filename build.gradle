buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath('com.guardsquare:proguard-gradle:7.4.0-beta02')
    }
}

plugins {
    id "java"
    id "java-library"
    id "maven-publish"
}

repositories {
    mavenCentral()
}

compileJava.options.encoding = "UTF-8"

configurations {
    include
    implementation.extendsFrom(include)
    runtimeOnly.extendsFrom(include)
    runtimeOnly.canBeResolved = true
    implementation.canBeResolved = true
}

dependencies {
    api('org.yaml:snakeyaml:2.2')

    compileOnly('org.projectlombok:lombok:1.18.30')
    annotationProcessor('org.projectlombok:lombok:1.18.30')
}

publishing {
    repositories {
        maven {
            name = "gpr"
            url = uri("https://maven.pkg.github.com/" + (project.findProperty("gr") ?: System.getenv("GITHUB_REPOSITORY")))
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GPR_USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GPR_TOKEN")
            }
        }
    }

    publications {
        maven(MavenPublication) {
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = 'Yaml Library'
                description = 'A library for to use the SnakeYaml for easily coding'
                url = 'http://www.akazukin.net/yaml-lib'
                licenses {
                    license {
                        name = ''
                        url = ''
                    }
                }
                developers {
                    developer {
                        id = 'currypan1229'
                        name = 'Currypan1229'
                        email = 'abcqqqwpvp@gmail.com'
                    }
                }
            }

            groupId = project.group
            artifactId = project.artifact
            version = System.getenv("GHA_EVENT") == "release" ? project.version : System.getenv("GH_COMMIT_HASH")
            from components.java
        }
    }
}
